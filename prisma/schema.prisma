
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Profile {
  id String @id @default(uuid())
  userId String @unique
  name String
  imageUrl String @db.Text
  email String @db.Text
  
  //Relations
  servers Server[]
  members Member[]
  channels Channel[]

  //Dates
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Server {
  id String @id @default(uuid())
  name String
  imageUrl String @db.Text
  inviteCode String @unique

  //Profile
  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  members Member[]
  channels Channel[]

  //Dates
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

model Member {
  id String @id @default(uuid())
  role MemberRole @default(GUEST)

  //Profile
  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  
  //Server
  serverId String
  server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  //Dates
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([serverId])
}

enum ChannelType {
  TEXT
  VOICE
  VIDEO
}

model Channel {
  id String @id @default(uuid())
  name String
  type ChannelType @default(TEXT)

  //Profile
  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  //Server
  serverId String
  server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  //Dates
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([serverId])
}